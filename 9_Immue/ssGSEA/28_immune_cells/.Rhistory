rm(list=ls())
path <- getwd()
setwd(path)
library(tidyverse)
library(GSVA)
library(pheatmap)
library('tidyHeatmap')
library('RColorBrewer')
library('ggpubr')
library(IOBR)
library('ggplot2')
library('cowplot')
library('ggplotify')
#读取基因集数据
set <- read.table('28_immune_cells.txt',sep = '\t', header = T)
geneset <- split(as.matrix(set)[,1], set[,2])
#读取UCSC_LUAD表达谱数据，并与Riskscore相匹配
exprs =read.table("exprs.txt",sep="\t",header=T,check.names=F)
rownames(exprs) <- exprs$gene
UCSC_LUAD_exprs_RS_all <- read.table("UCSC_LUAD_exprs_RS_all.txt",sep="\t",header=T,check.names=F)
LUAD <- read.table("LUAD.txt",sep="\t",header=T,check.names=F)
LUAD1 <- LUAD[LUAD$Sample %in% UCSC_LUAD_exprs_RS_all$Sample,]
LUAD2 <- subset(LUAD1,select = -c(os_time,pfs_time,os_status,pfs_status))
UCSC_LUAD_cli_exprs_RS_all <- merge(UCSC_LUAD_exprs_RS_all,LUAD2,by='Sample')
UCSC_LUAD_cli_exprs_RS_all1 <- subset(UCSC_LUAD_cli_exprs_RS_all,select = c('Sample','Risk_score','Risk_score_LH'))
exprs1 <- exprs[,colnames(exprs) %in% UCSC_LUAD_cli_exprs_RS_all1$Sample]
#进行ssGSEA分析
gsvapar <- gsvaParam(as.matrix(exprs1), geneset, maxDiff=TRUE)
gsva_matrix <- gsva(gsvapar)
#绘制箱式图
gsva_matrix_long <- gsva_matrix %>%
t() %>% as.data.frame() %>%
rownames_to_column(var = 'ID') %>%
pivot_longer(cols = !ID,
names_to = 'cell_type', values_to = 'fraction')
colnames(UCSC_LUAD_cli_exprs_RS_all1)[1] <- 'ID'
gsva_matrix_long1 <- merge(gsva_matrix_long,UCSC_LUAD_cli_exprs_RS_all1,by='ID',all=FALSE)
gsva_matrix_long1$Risk_score_LH <- factor(gsva_matrix_long1$Risk_score_LH,levels=c(0,1),labels=c('Low','High'))
p1 <- ggplot(gsva_matrix_long1,aes(fct_reorder(cell_type,fraction),fraction,fill = Risk_score_LH)) +
geom_boxplot(outlier.shape = 21,color = "black") +
scale_fill_manual(values = palette1[c(2,4)])+
theme_bw() +
labs(x = NULL, y = "Estimated Score") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle=45,hjust = 1),
axis.text = element_text(color = "black",size = 12))+
stat_compare_means(aes(group = Risk_score_LH,label = ..p.signif..),
method = "kruskal.test",label.y = 1.0)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 14,height = 7)
gsva_matrix1<- t(scale(t(gsva_matrix)))#归一化
#gsva_matrix1[gsva_matrix1< -2] <- -2
#gsva_matrix1[gsva_matrix1>2] <- 2
lowrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 0, select = 'ID')
highrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 1, select = 'ID')
gsva_matrix1 <- cbind(gsva_matrix1[,colnames(gsva_matrix1) %in% lowrisk$ID],gsva_matrix1[,colnames(gsva_matrix1) %in% highrisk$ID])  #Lowrisk在前，highrisk在后
anti_tumor <- c('Activated CD4 T cell', 'Activated CD8 T cell', 'Central memory CD4 T cell', 'Central memory CD8 T cell', 'Effector memeory CD4 T cell', 'Effector memeory CD8 T cell', 'Type 1 T helper cell', 'Type 17 T helper cell', 'Activated dendritic cell', 'CD56bright natural killer cell', 'Natural killer cell', 'Natural killer T cell')
pro_tumor <- c('Regulatory T cell', 'Type 2 T helper cell', 'CD56dim natural killer cell', 'Immature dendritic cell', 'Macrophage', 'MDSC', 'Neutrophil', 'Plasmacytoid dendritic cell')
anti<- gsub('^ ','',rownames(gsva_matrix1))%in%anti_tumor
pro<- gsub('^ ','',rownames(gsva_matrix1))%in%pro_tumor
non <- !(anti|pro)##设定三种基因
gsva_matrix1<- rbind(gsva_matrix1[anti,],gsva_matrix1[pro,],gsva_matrix1[non,])#再结合起来，使图分成三段
View(gsva_matrix1)
normalization<-function(x){
return((x-min(x))/(max(x)-min(x)))}#设定normalization函数
nor_gsva_matrix1 <- normalization(gsva_matrix1)
annotation_col <- data.frame(Group = c(rep('Low_risk',nrow(lowrisk)),
rep('High_risk',nrow(highrisk))))
rownames(annotation_col) <- colnames(nor_gsva_matrix1)
length(anti_tumor)
nrow(pro_tumor)
length(pro_tumor)
length(non)
length(which(non)
)
annotation_row <- data.frame(Group = c(rep('anti_tumor',length(anti_tumor)),
rep('pro_tumor',length(pro_tumor)),
rep('non_tumor',length(which(non)))))
rownames(annotation_row) <- rownames(nor_gsva_matrix1)
View(annotation_row)
pheatmap(nor_gsva_matrix1, annotation_col = annotation_col, annotation_row = annotation_row,
cluster_rows = FALSE, cluster_cols = FALSE,
show_rownames = TRUE, show_colnames = FALSE)
p2 <- pheatmap(nor_gsva_matrix1, annotation_col = annotation_col, annotation_row = annotation_row,
cluster_rows = FALSE, cluster_cols = FALSE,
show_rownames = TRUE, show_colnames = FALSE)
p3 <- as.ggplot(p2)
ggsave('28_immune_cells_heatmap.pdf',plot = p3,width = 15, height = 7)
rm(list=ls())
path <- getwd()
setwd(path)
library(tidyverse)
library(GSVA)
library(pheatmap)
library('tidyHeatmap')
library('RColorBrewer')
library('ggpubr')
library(IOBR)
library('ggplot2')
library('cowplot')
library('ggplotify')
#读取基因集数据
set <- read.table('28_immune_cells.txt',sep = '\t', header = T)
geneset <- split(as.matrix(set)[,1], set[,2])
#读取UCSC_LUAD表达谱数据，并与Riskscore相匹配
exprs =read.table("exprs.txt",sep="\t",header=T,check.names=F)
rownames(exprs) <- exprs$gene
UCSC_LUAD_exprs_RS_all <- read.table("UCSC_LUAD_exprs_RS_all.txt",sep="\t",header=T,check.names=F)
LUAD <- read.table("LUAD.txt",sep="\t",header=T,check.names=F)
LUAD1 <- LUAD[LUAD$Sample %in% UCSC_LUAD_exprs_RS_all$Sample,]
LUAD2 <- subset(LUAD1,select = -c(os_time,pfs_time,os_status,pfs_status))
UCSC_LUAD_cli_exprs_RS_all <- merge(UCSC_LUAD_exprs_RS_all,LUAD2,by='Sample')
UCSC_LUAD_cli_exprs_RS_all1 <- subset(UCSC_LUAD_cli_exprs_RS_all,select = c('Sample','Risk_score','Risk_score_LH'))
exprs1 <- exprs[,colnames(exprs) %in% UCSC_LUAD_cli_exprs_RS_all1$Sample]
#进行ssGSEA分析
gsvapar <- gsvaParam(as.matrix(exprs1), geneset, maxDiff=TRUE)
gsva_matrix <- gsva(gsvapar)
write.table(gsva_matrix,'gsva_matrix.txt',sep = '\t')
rm(list=ls())
path <- getwd()
setwd(path)
library(tidyverse)
library(GSVA)
library(pheatmap)
library('tidyHeatmap')
library('RColorBrewer')
library('ggpubr')
library(IOBR)
library('ggplot2')
library('cowplot')
library('ggplotify')
#读取基因集数据
set <- read.table('28_immune_cells.txt',sep = '\t', header = T)
geneset <- split(as.matrix(set)[,1], set[,2])
#读取UCSC_LUAD表达谱数据，并与Riskscore相匹配
exprs =read.table("exprs.txt",sep="\t",header=T,check.names=F)
rownames(exprs) <- exprs$gene
UCSC_LUAD_exprs_RS_all <- read.table("UCSC_LUAD_exprs_RS_all.txt",sep="\t",header=T,check.names=F)
LUAD <- read.table("LUAD.txt",sep="\t",header=T,check.names=F)
LUAD1 <- LUAD[LUAD$Sample %in% UCSC_LUAD_exprs_RS_all$Sample,]
LUAD2 <- subset(LUAD1,select = -c(os_time,pfs_time,os_status,pfs_status))
UCSC_LUAD_cli_exprs_RS_all <- merge(UCSC_LUAD_exprs_RS_all,LUAD2,by='Sample')
UCSC_LUAD_cli_exprs_RS_all1 <- subset(UCSC_LUAD_cli_exprs_RS_all,select = c('Sample','Risk_score','Risk_score_LH'))
exprs1 <- exprs[,colnames(exprs) %in% UCSC_LUAD_cli_exprs_RS_all1$Sample]
#进行ssGSEA分析
gsvapar <- gsvaParam(as.matrix(exprs1), geneset, maxDiff=TRUE)
gsva_matrix <- gsva(gsvapar)
#绘制箱式图
gsva_matrix_long <- gsva_matrix %>%
t() %>% as.data.frame() %>%
rownames_to_column(var = 'ID') %>%
pivot_longer(cols = !ID,
names_to = 'cell_type', values_to = 'fraction')
colnames(UCSC_LUAD_cli_exprs_RS_all1)[1] <- 'ID'
gsva_matrix_long1 <- merge(gsva_matrix_long,UCSC_LUAD_cli_exprs_RS_all1,by='ID',all=FALSE)
gsva_matrix_long1$Risk_score_LH <- factor(gsva_matrix_long1$Risk_score_LH,levels=c(0,1),labels=c('Low','High'))
p1 <- ggplot(gsva_matrix_long1,aes(fct_reorder(cell_type,fraction),fraction,fill = Risk_score_LH)) +
geom_boxplot(outlier.shape = 21,color = "black") +
scale_fill_manual(values = palette1[c(2,4)])+
theme_bw() +
labs(x = NULL, y = "Estimated Score") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle=45,hjust = 1),
axis.text = element_text(color = "black",size = 12))+
stat_compare_means(aes(group = Risk_score_LH,label = ..p.signif..),
method = "kruskal.test",label.y = 1.0)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 16,height = 7)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 18,height = 7)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 21,height = 7)
rm(list=ls())
path <- getwd()
setwd(path)
library(tidyverse)
library(GSVA)
library(pheatmap)
library('tidyHeatmap')
library('RColorBrewer')
library('ggpubr')
library(IOBR)
library('ggplot2')
library('cowplot')
library('ggplotify')
#读取基因集数据
set <- read.table('28_immune_cells.txt',sep = '\t', header = T)
geneset <- split(as.matrix(set)[,1], set[,2])
#读取UCSC_LUAD表达谱数据，并与Riskscore相匹配
exprs =read.table("exprs.txt",sep="\t",header=T,check.names=F)
rownames(exprs) <- exprs$gene
UCSC_LUAD_exprs_RS_all <- read.table("UCSC_LUAD_exprs_RS_all.txt",sep="\t",header=T,check.names=F)
LUAD <- read.table("LUAD.txt",sep="\t",header=T,check.names=F)
LUAD1 <- LUAD[LUAD$Sample %in% UCSC_LUAD_exprs_RS_all$Sample,]
LUAD2 <- subset(LUAD1,select = -c(os_time,pfs_time,os_status,pfs_status))
UCSC_LUAD_cli_exprs_RS_all <- merge(UCSC_LUAD_exprs_RS_all,LUAD2,by='Sample')
UCSC_LUAD_cli_exprs_RS_all1 <- subset(UCSC_LUAD_cli_exprs_RS_all,select = c('Sample','Risk_score','Risk_score_LH'))
exprs1 <- exprs[,colnames(exprs) %in% UCSC_LUAD_cli_exprs_RS_all1$Sample]
#进行ssGSEA分析
gsvapar <- gsvaParam(as.matrix(exprs1), geneset, maxDiff=TRUE)
gsva_matrix <- gsva(gsvapar)
#绘制箱式图
gsva_matrix_long <- gsva_matrix %>%
t() %>% as.data.frame() %>%
rownames_to_column(var = 'ID') %>%
pivot_longer(cols = !ID,
names_to = 'cell_type', values_to = 'fraction')
colnames(UCSC_LUAD_cli_exprs_RS_all1)[1] <- 'ID'
gsva_matrix_long1 <- merge(gsva_matrix_long,UCSC_LUAD_cli_exprs_RS_all1,by='ID',all=FALSE)
gsva_matrix_long1$Risk_score_LH <- factor(gsva_matrix_long1$Risk_score_LH,levels=c(0,1),labels=c('Low','High'))
p1 <- ggplot(gsva_matrix_long1,aes(fct_reorder(cell_type,fraction),fraction,fill = Risk_score_LH)) +
geom_boxplot(outlier.shape = 21,color = "black") +
scale_fill_manual(values = palette1[c(2,4)])+
theme_bw() +
labs(x = NULL, y = "Estimated Score") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle=45,hjust = 1),
axis.text = element_text(color = "black",size = 12))+
stat_compare_means(aes(group = Risk_score_LH,label = ..p.signif..),
method = "kruskal.test",label.y = 1.0)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 21,height = 7)
#绘制热图
gsva_matrix1<- t(scale(t(gsva_matrix)))#归一化
#gsva_matrix1[gsva_matrix1< -2] <- -2
#gsva_matrix1[gsva_matrix1>2] <- 2
lowrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 0, select = 'ID')
highrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 1, select = 'ID')
gsva_matrix1 <- cbind(gsva_matrix1[,colnames(gsva_matrix1) %in% lowrisk$ID],gsva_matrix1[,colnames(gsva_matrix1) %in% highrisk$ID])  #Lowrisk在前，highrisk在后
anti_tumor <- c('Activated CD4 T cell', 'Activated CD8 T cell', 'Central memory CD4 T cell', 'Central memory CD8 T cell', 'Effector memeory CD4 T cell', 'Effector memeory CD8 T cell', 'Type 1 T helper cell', 'Type 17 T helper cell', 'Activated dendritic cell', 'CD56bright natural killer cell', 'Natural killer cell', 'Natural killer T cell')
pro_tumor <- c('Regulatory T cell', 'Type 2 T helper cell', 'CD56dim natural killer cell', 'Immature dendritic cell', 'Macrophage', 'MDSC', 'Neutrophil', 'Plasmacytoid dendritic cell')
anti<- gsub('^ ','',rownames(gsva_matrix1))%in%anti_tumor
pro<- gsub('^ ','',rownames(gsva_matrix1))%in%pro_tumor
non <- !(anti|pro)##设定三种基因
gsva_matrix1<- rbind(gsva_matrix1[anti,],gsva_matrix1[pro,],gsva_matrix1[non,])#再结合起来，使图分成三段
normalization<-function(x){
return((x-min(x))/(max(x)-min(x)))}#设定normalization函数
nor_gsva_matrix1 <- normalization(gsva_matrix1)
annotation_col <- data.frame(Group = c(rep('Low_risk',nrow(lowrisk)),
rep('High_risk',nrow(highrisk))))
rownames(annotation_col) <- colnames(nor_gsva_matrix1)
annotation_row <- data.frame(Group = c(rep('anti_tumor',length(anti_tumor)),
rep('pro_tumor',length(pro_tumor)),
rep('non_tumor',length(which(non)))))
rownames(annotation_row) <- rownames(nor_gsva_matrix1)
p2 <- pheatmap(nor_gsva_matrix1, annotation_col = annotation_col, annotation_row = annotation_row,
cluster_rows = FALSE, cluster_cols = FALSE,
show_rownames = TRUE, show_colnames = FALSE)
p3 <- as.ggplot(p2)
ggsave('28_immune_cells_heatmap.pdf',plot = p3,width = 15, height = 7)
rm(list=ls())
path <- getwd()
setwd(path)
library(tidyverse)
library(GSVA)
library(pheatmap)
library('tidyHeatmap')
library('RColorBrewer')
library('ggpubr')
library(IOBR)
library('ggplot2')
library('cowplot')
library('ggplotify')
#读取基因集数据
set <- read.table('28_immune_cells.txt',sep = '\t', header = T)
geneset <- split(as.matrix(set)[,1], set[,2])
#读取UCSC_LUAD表达谱数据，并与Riskscore相匹配
exprs =read.table("exprs.txt",sep="\t",header=T,check.names=F)
rownames(exprs) <- exprs$gene
UCSC_LUAD_exprs_RS_all <- read.table("UCSC_LUAD_exprs_RS_all.txt",sep="\t",header=T,check.names=F)
LUAD <- read.table("LUAD.txt",sep="\t",header=T,check.names=F)
LUAD1 <- LUAD[LUAD$Sample %in% UCSC_LUAD_exprs_RS_all$Sample,]
LUAD2 <- subset(LUAD1,select = -c(os_time,pfs_time,os_status,pfs_status))
UCSC_LUAD_cli_exprs_RS_all <- merge(UCSC_LUAD_exprs_RS_all,LUAD2,by='Sample')
UCSC_LUAD_cli_exprs_RS_all1 <- subset(UCSC_LUAD_cli_exprs_RS_all,select = c('Sample','Risk_score','Risk_score_LH'))
exprs1 <- exprs[,colnames(exprs) %in% UCSC_LUAD_cli_exprs_RS_all1$Sample]
#进行ssGSEA分析
gsvapar <- gsvaParam(as.matrix(exprs1), geneset, maxDiff=TRUE)
gsva_matrix <- gsva(gsvapar)
#绘制箱式图
gsva_matrix_long <- gsva_matrix %>%
t() %>% as.data.frame() %>%
rownames_to_column(var = 'ID') %>%
pivot_longer(cols = !ID,
names_to = 'cell_type', values_to = 'fraction')
colnames(UCSC_LUAD_cli_exprs_RS_all1)[1] <- 'ID'
gsva_matrix_long1 <- merge(gsva_matrix_long,UCSC_LUAD_cli_exprs_RS_all1,by='ID',all=FALSE)
gsva_matrix_long1$Risk_score_LH <- factor(gsva_matrix_long1$Risk_score_LH,levels=c(0,1),labels=c('Low','High'))
p1 <- ggplot(gsva_matrix_long1,aes(fct_reorder(cell_type,fraction),fraction,fill = Risk_score_LH)) +
geom_boxplot(outlier.shape = 21,color = "black") +
scale_fill_manual(values = palette1[c(2,4)])+
theme_bw() +
labs(x = NULL, y = "Estimated Score") +
theme(legend.position = "top") +
theme(axis.text.x = element_text(angle=45,hjust = 1),
axis.text = element_text(color = "black",size = 12))+
stat_compare_means(aes(group = Risk_score_LH,label = ..p.signif..),
method = "kruskal.test",label.y = 1.0)
ggsave('28_immune_cells_bar.pdf',plot = p1,width = 21,height = 7)
#绘制热图
gsva_matrix1<- t(scale(t(gsva_matrix)))#归一化
#gsva_matrix1[gsva_matrix1< -2] <- -2
#gsva_matrix1[gsva_matrix1>2] <- 2
lowrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 0, select = 'ID')
highrisk <- subset(UCSC_LUAD_cli_exprs_RS_all1, Risk_score_LH == 1, select = 'ID')
gsva_matrix1 <- cbind(gsva_matrix1[,colnames(gsva_matrix1) %in% lowrisk$ID],gsva_matrix1[,colnames(gsva_matrix1) %in% highrisk$ID])  #Lowrisk在前，highrisk在后
anti_tumor <- c('Activated CD4 T cell', 'Activated CD8 T cell', 'Central memory CD4 T cell', 'Central memory CD8 T cell', 'Effector memeory CD4 T cell', 'Effector memeory CD8 T cell', 'Type 1 T helper cell', 'Type 17 T helper cell', 'Activated dendritic cell', 'CD56bright natural killer cell', 'Natural killer cell', 'Natural killer T cell')
pro_tumor <- c('Regulatory T cell', 'Type 2 T helper cell', 'CD56dim natural killer cell', 'Immature dendritic cell', 'Macrophage', 'MDSC', 'Neutrophil', 'Plasmacytoid dendritic cell')
anti<- gsub('^ ','',rownames(gsva_matrix1))%in%anti_tumor
pro<- gsub('^ ','',rownames(gsva_matrix1))%in%pro_tumor
non <- !(anti|pro)##设定三种基因
gsva_matrix1<- rbind(gsva_matrix1[anti,],gsva_matrix1[pro,],gsva_matrix1[non,])#再结合起来，使图分成三段
normalization<-function(x){
return((x-min(x))/(max(x)-min(x)))}#设定normalization函数
nor_gsva_matrix1 <- normalization(gsva_matrix1)
annotation_col <- data.frame(Group = c(rep('Low_risk',nrow(lowrisk)),
rep('High_risk',nrow(highrisk))))
rownames(annotation_col) <- colnames(nor_gsva_matrix1)
annotation_row <- data.frame(Group = c(rep('anti_tumor',length(anti_tumor)),
rep('pro_tumor',length(pro_tumor)),
rep('non_tumor',length(which(non)))))
rownames(annotation_row) <- rownames(nor_gsva_matrix1)
p2 <- pheatmap(nor_gsva_matrix1, annotation_col = annotation_col, annotation_row = annotation_row,
cluster_rows = FALSE, cluster_cols = FALSE,
show_rownames = TRUE, show_colnames = FALSE)
p3 <- as.ggplot(p2)
ggsave('28_immune_cells_heatmap.pdf',plot = p3,width = 15, height = 7)

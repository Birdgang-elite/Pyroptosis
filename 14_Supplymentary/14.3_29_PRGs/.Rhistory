rm(list = ls())
path <- getwd()
setwd(path)
rm(list = ls())
path <- getwd()
setwd(path)
DEGs_DESeq2 <- read.table('DEGs_DESeq2.txt', header = T, sep = "\t", check.names = F, row.names = 1)
View(DEGs_DESeq2)
DEGs_DESeq2 <- read.table('DEGs_DESeq2.txt', header = T, sep = "\t", check.names = F)
View(DEGs_DESeq2)
unicox <- read.table('unicox.txt', header = T, sep = "\t", check.names = F)
View(unicox)
unicox <- read.table('unicox.txt', header = F, sep = "\t", check.names = F)
View(unicox)
rm(list = ls())
path <- getwd()
setwd(path)
DEGs_DESeq2 <- read.table('DEGs_DESeq2.txt', header = T, sep = "\t", check.names = F)
unicox <- read.table('unicox.txt', header = F, sep = "\t", check.names = F)
colnames(unicox)[1] <- 'gene'
DEGs_unicox <- merge(DEGs_DESeq2,unicox, by = 'gene')
View(DEGs_unicox)
write.table(DEGs_unicox, 'DEGs_unicox.txt', sep="\t",quote=F,row.names=F)
rm(list = ls())
path <- getwd()
setwd(path)
library(clusterProfiler)
rm(list = ls())
path <- getwd()
setwd(path)
library(clusterProfiler)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
##GO/KEGG分析
#################################
##在绘制弦图时，请选取合适的数据。
#################################
rm(list = ls())
path <- getwd()
setwd(path)
##GO/KEGG分析
#################################
##在绘制弦图时，请选取合适的数据。
#################################
rm(list = ls())
path <- getwd()
setwd(path)
library(clusterProfiler)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
library(AnnotationHub)
BiocManager::install("AnnotationHub")
BiocManager::install("AnnotationDbi")
library(clusterProfiler)
library(AnnotationHub)
library(AnnotationDbi)
library(ggplot2)
library(org.Hs.eg.db)
BiocManager::install("org.Hs.eg.db")
rm(list = ls())
path <- getwd()
setwd(path)
library(clusterProfiler)
library(AnnotationHub)
library(AnnotationDbi)
library(ggplot2)
library(org.Hs.eg.db)
library(enrichplot)
library(ggupset)
library(stringr)
library(GOplot)
library(DOSE)
library(ggnewscale)
library(circlize)
library(ComplexHeatmap)
library(reshape2)
library(ggridges)
BiocManager::install("ComplexHeatmap")
library(ComplexHeatmap)
#Data_preparing
DEGOIs <- read.table("DEGs_unicox.txt",sep="\t",header=T,check.names=F)
deg.id <- bitr(DEGOIs$gene, fromType = 'SYMBOL',
toType = 'ENTREZID',OrgDb = "org.Hs.eg.db")
idvec <- deg.id$ENTREZID
names(idvec) <- deg.id$SYMBOL
DEGOIs$ENTREZID <- idvec[DEGOIs$gene]
#GO_BP
ego_BP <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_BP,"Enrich_GO_BP.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_BP)
ggsave('GO_BP_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ego_BP,showCategory=10)
ggsave('GO_BP_Dot.pdf',plot = p2,width = 7,height = 7)
#GO_CC
ego_CC <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_CC,"Enrich_GO_CC.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_CC)
ggsave('GO_CC_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ego_CC,showCategory=10)
ggsave('GO_CC_Dot.pdf',plot = p2,width = 7,height = 7)
#GO_MF
ego_MF <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_MF,"Enrich_GO_MF.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_MF)
ggsave('GO_MF_Bar.pdf',plot = p1,width = 7,height = 7)
View(ego_MF)
View(ego_CC)
View(ego_MF)
View(p1)
barplot(ego_MF)
#GO_ALL
ego_ALL <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.05,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_ALL,"Enrich_GO_ALL.txt",sep="\t",row.names=F,quote=F,na='')
barplot(ego_ALL, split="ONTOLOGY")+facet_grid(ONTOLOGY~., scale="free")
p1 <- barplot(ego_ALL, split="ONTOLOGY")+facet_grid(ONTOLOGY~., scale="free")
ggsave('GO_ALL_Bar.pdf',plot = p1,width = 12,height = 12)
p2 <- dotplot(ego_ALL, split="ONTOLOGY")+facet_grid(ONTOLOGY~., scale="free")
ggsave('GO_ALL_Dot.pdf',plot = p2,width = 12,height = 12)
#KEGG
ekk <- enrichKEGG(gene = DEGOIs$ENTREZID,
keyType = 'kegg',
organism = 'hsa',
pvalueCutoff = 0.05,
pAdjustMethod  = "BH"
#qvalueCutoff  = 0.05
)
ekk <- DOSE::setReadable(ekk,OrgDb = org.Hs.eg.db,
keyType = 'ENTREZID')#ENTREZID to gene Symbol
write.table(ekk,"Enrich_KEGG.txt",sep="\t",row.names=F,quote=F,na='')
barplot(ekk)
View(ekk)
ekk <- enrichKEGG(gene = DEGOIs$ENTREZID,
keyType = 'kegg',
organism = 'hsa',
pvalueCutoff = 0.2,
pAdjustMethod  = "BH"
#qvalueCutoff  = 0.05
)
ekk <- DOSE::setReadable(ekk,OrgDb = org.Hs.eg.db,
keyType = 'ENTREZID')#ENTREZID to gene Symbol
write.table(ekk,"Enrich_KEGG.txt",sep="\t",row.names=F,quote=F,na='')
barplot(ekk)
p1 <- barplot(ekk)
ggsave('KEGG_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ekk,showCategory=10)
ggsave('KEGG_Dot.pdf',plot = p2,width = 7,height = 7)
rm(list = ls())
path <- getwd()
setwd(path)
library(clusterProfiler)
library(AnnotationHub)
library(AnnotationDbi)
library(ggplot2)
library(org.Hs.eg.db)
library(enrichplot)
library(ggupset)
library(stringr)
library(GOplot)
library(DOSE)
library(ggnewscale)
library(circlize)
library(ComplexHeatmap)
library(reshape2)
library(ggridges)
#Data_preparing
DEGOIs <- read.table("DEGs_unicox.txt",sep="\t",header=T,check.names=F)
deg.id <- bitr(DEGOIs$gene, fromType = 'SYMBOL',
toType = 'ENTREZID',OrgDb = "org.Hs.eg.db")
idvec <- deg.id$ENTREZID
names(idvec) <- deg.id$SYMBOL
DEGOIs$ENTREZID <- idvec[DEGOIs$gene]
#GO_BP
ego_BP <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.2,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_BP,"Enrich_GO_BP.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_BP)
ggsave('GO_BP_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ego_BP,showCategory=10)
ggsave('GO_BP_Dot.pdf',plot = p2,width = 7,height = 7)
#GO_CC
ego_CC <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.2,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_CC,"Enrich_GO_CC.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_CC)
ggsave('GO_CC_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ego_CC,showCategory=10)
ggsave('GO_CC_Dot.pdf',plot = p2,width = 7,height = 7)
#GO_MF
ego_MF <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "MF",
pAdjustMethod = "BH",
pvalueCutoff  = 0.2,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_MF,"Enrich_GO_MF.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_MF)
ggsave('GO_MF_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ego_MF,showCategory=10)
ggsave('GO_MF_Dot.pdf',plot = p2,width = 7,height = 7)
#GO_ALL
ego_ALL <- enrichGO(gene = deg.id$ENTREZID,
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
pvalueCutoff  = 0.2,
#qvalueCutoff  = 0.01,
readable = TRUE)
write.table(ego_ALL,"Enrich_GO_ALL.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ego_ALL, split="ONTOLOGY")+facet_grid(ONTOLOGY~., scale="free")
ggsave('GO_ALL_Bar.pdf',plot = p1,width = 12,height = 12)
p2 <- dotplot(ego_ALL, split="ONTOLOGY")+facet_grid(ONTOLOGY~., scale="free")
ggsave('GO_ALL_Dot.pdf',plot = p2,width = 12,height = 12)
#KEGG
ekk <- enrichKEGG(gene = DEGOIs$ENTREZID,
keyType = 'kegg',
organism = 'hsa',
pvalueCutoff = 0.2,
pAdjustMethod  = "BH"
#qvalueCutoff  = 0.05
)
ekk <- DOSE::setReadable(ekk,OrgDb = org.Hs.eg.db,
keyType = 'ENTREZID')#ENTREZID to gene Symbol
write.table(ekk,"Enrich_KEGG.txt",sep="\t",row.names=F,quote=F,na='')
p1 <- barplot(ekk)
ggsave('KEGG_Bar.pdf',plot = p1,width = 7,height = 7)
p2 <- dotplot(ekk,showCategory=10)
ggsave('KEGG_Dot.pdf',plot = p2,width = 7,height = 7)
#centplot,对于基因和富集的pathways之间的对应关系进行展示，如果一个基因位于一个pathway下，则将该基因与pathway连线
p1 <- cnetplot(ekk, categorySize="pvalue", showCategory = 5)
ggsave('KEGG_CNETPLOT.pdf',plot = p1,width = 12,height = 9)
#emapplot
p1 <- upsetplot(ekk)
ggsave('KEGG_EMAPPLOT.pdf',plot = p1,width = 12,height = 9)
View(DEGOIs)
genedata<-data.frame(ID=DEGOIs$gene,logFC=DEGOIs$log2FoldChange)
write.table(ego_ALL$ONTOLOGY, file = "GO_ONTOLOGYs.txt", #将所有GO富集到的基因集所对应的类型写入本地文件从而得到BP/CC/MF各自的起始位置如我的数据里是1，611，624
append = FALSE, quote = TRUE, sep = " ",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
GOplotIn_BP<-ego_ALL[1:5,c(2,3,7,9)] #提取GO富集BP的前10行,提取ID,Description,p.adjust,GeneID四列
GOplotIn_CC<-ego_ALL[726:730,c(2,3,7,9)]#提取GO富集CC的前10行,提取ID,Description,p.adjust,GeneID四列
GOplotIn_MF<-ego_ALL[757:762,c(2,3,7,9)]#提取GO富集MF的前10行,提取ID,Description,p.adjust,GeneID四列
GOplotIn_BP$geneID <-str_replace_all(GOplotIn_BP$geneID,'/',',') #把GeneID列中的’/’替换成‘,’
GOplotIn_BP<-ego_ALL[1:5,c(2,3,7,9)] #提取GO富集BP的前10行,提取ID,Description,p.adjust,GeneID四列
GOplotIn_CC<-ego_ALL[726:730,c(2,3,7,9)]#提取GO富集CC的前10行,提取ID,Description,p.adjust,GeneID四列
GOplotIn_MF<-ego_ALL[757:762,c(2,3,7,9)]#提取GO富集MF的前10行,提取ID,Description,p.adjust,GeneID四列
View(GOplotIn_BP)
GOplotIn_BP$geneID <-str_replace_all(GOplotIn_BP$geneID,'/',',') #把GeneID列中的’/’替换成‘,’
